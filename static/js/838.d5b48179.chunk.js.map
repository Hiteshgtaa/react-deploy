{"version":3,"file":"static/js/838.d5b48179.chunk.js","mappings":"mNASA,MAqFA,EArFoBA,IAcb,IAbLC,UAAWC,EAAG,eACdC,EAAc,UACdC,EAAS,UACTC,EAAS,sBACTC,EAAqB,QACrBC,EAAO,mBACPC,EAAkB,kBAClBC,EAAiB,aACjBC,EAAY,aACZC,EAAY,YACZC,EAAW,sBACXC,EAAqB,YACrBC,GACDd,EACC,OACEe,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,SAAO,EAACC,YAAU,EAACC,OAAK,EAACC,UAAU,OAAMC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,SAAAD,UACEN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACCnB,EAAeoB,KAAI,CAACC,EAAIC,KACvBH,EAAAA,EAAAA,KAAA,MAAAD,SAAab,EAAmBgB,IAAvBC,MAEXH,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACY,OAATjB,QAAS,IAATA,OAAS,EAATA,EACGsB,QAAQF,IAAS,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAIG,oBAAuB,OAAHzB,QAAG,IAAHA,OAAG,EAAHA,EAAKyB,mBAC7CJ,KAAI,CAACC,EAAIC,KACRV,EAAAA,EAAAA,MAAA,MAEEK,UAAWf,EAAUuB,SAASJ,GAAM,yBAA2B,GAAGH,SAAA,EAElEC,EAAAA,EAAAA,KAAA,MAAIO,MAAO,CAAEC,UAAW,UAAWT,UACjCC,EAAAA,EAAAA,KAACS,EAAAA,EAAKC,MAAK,CACTC,SAAWC,GAAMxB,EAAawB,EAAGV,EAAItB,GACrC,aAAW,eAGdC,EAAeoB,KAAKY,IACnBb,EAAAA,EAAAA,KAAA,MAAAD,SAAaG,EAAGW,IAAPA,MAEXb,EAAAA,EAAAA,KAAA,MAAIO,MAAO,CAAEC,UAAW,UAAWT,SAChCV,EAAaiB,SAASJ,IAA+B,IAAxBb,EAAayB,QACzCd,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CACLC,QAAQ,UACRC,KAAK,KACLC,QAASA,IAAM1B,EAAYU,GAC3BK,MAAO,CACLY,SAAU,OACVC,QAAS,iBACTrB,SACH,UAGCV,EAAaiB,SAASJ,IAAOb,EAAayB,OAAS,GACrDd,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CACLC,QAAQ,UACRC,KAAK,KACLC,QAASA,IAAM5B,EAAYY,GAC3BK,MAAO,CACLY,SAAU,OACVC,QAAS,iBACTrB,SACH,WAIDC,EAAAA,EAAAA,KAACqB,EAAAA,EAAe,CACdC,KAAMC,EAAAA,IACNL,QAASA,IAAM3B,EAAsBW,EAAItB,GACzCqC,KAAK,KACLO,MAAM,UACNjB,MAAO,CAAEiB,MAAO,OAAQC,OAAQ,iBA3CjCtB,SAkDP,C","sources":["components/Scheme/Table.jsx"],"sourcesContent":["import {\r\n  faCircleChevronLeft,\r\n  faCircleChevronRight,\r\n  faRightLong,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport react from \"react\";\r\nimport { Button, Form, Table } from \"react-bootstrap\";\r\n\r\nconst SchemaTable = ({\r\n  customKey: key,\r\n  visibleColumns,\r\n  sampleObj,\r\n  movedRows,\r\n  tableColumnVisibility,\r\n  columns,\r\n  convertToUpperCase,\r\n  toggleFullColumns,\r\n  handleChange,\r\n  selectedRows,\r\n  handleMerge,\r\n  handleRightArrowClick,\r\n  handleSplit,\r\n}) => {\r\n  return (\r\n    <Table striped responsive hover className=\"mt-2\">\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          {visibleColumns.map((el, i) => (\r\n            <th key={i}>{convertToUpperCase(el)}</th>\r\n          ))}\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {sampleObj\r\n          ?.filter((el) => el?.serviceCategory === key?.serviceCategory)\r\n          .map((el, i) => (\r\n            <tr\r\n              key={i}\r\n              className={movedRows.includes(el) ? \"moved-row disabled-row\" : \"\"}\r\n            >\r\n              <td style={{ textAlign: \"center\" }}>\r\n                <Form.Check\r\n                  onChange={(e) => handleChange(e, el, key)}\r\n                  aria-label=\"option 1\"\r\n                />\r\n              </td>\r\n              {visibleColumns.map((k) => (\r\n                <td key={k}>{el[k]}</td>\r\n              ))}\r\n              <td style={{ textAlign: \"center\" }}>\r\n                {selectedRows.includes(el) && selectedRows.length === 1 ? (\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    size=\"sm\"\r\n                    onClick={() => handleSplit(el)}\r\n                    style={{\r\n                      minWidth: \"60px\",\r\n                      padding: \"0.2rem 0.5rem\",\r\n                    }}\r\n                  >\r\n                    Split\r\n                  </Button>\r\n                ) : selectedRows.includes(el) && selectedRows.length > 1 ? (\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    size=\"sm\"\r\n                    onClick={() => handleMerge(el)}\r\n                    style={{\r\n                      minWidth: \"60px\",\r\n                      padding: \"0.2rem 0.5rem\",\r\n                    }}\r\n                  >\r\n                    Merge\r\n                  </Button>\r\n                ) : (\r\n                  <FontAwesomeIcon\r\n                    icon={faRightLong}\r\n                    onClick={() => handleRightArrowClick(el, key)}\r\n                    size=\"1x\"\r\n                    color=\"primary\"\r\n                    style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                  />\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default SchemaTable;\r\n"],"names":["_ref","customKey","key","visibleColumns","sampleObj","movedRows","tableColumnVisibility","columns","convertToUpperCase","toggleFullColumns","handleChange","selectedRows","handleMerge","handleRightArrowClick","handleSplit","_jsxs","Table","striped","responsive","hover","className","children","_jsx","map","el","i","filter","serviceCategory","includes","style","textAlign","Form","Check","onChange","e","k","length","Button","variant","size","onClick","minWidth","padding","FontAwesomeIcon","icon","faRightLong","color","cursor"],"sourceRoot":""}